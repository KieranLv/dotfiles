static const unsigned int borderpx  = 1;
static const unsigned int snap      = 32;
static const int focusonwheel       = 0;
static const int showbar            = 1;
static const int topbar             = 1;
static const char *fonts[]          = { "monospace:size=10" };
static const char dmenufont[]       = "monospace:size=10";



static char normbgcolor[]           = "#000021";
static char normbordercolor[]       = "#000021";
static char normfgcolor[]           = "#dbdfbc";
static char selfgcolor[]            = "#000021";
static char selbgcolor[]            = "#dbdfbc";
static char *colors[][3] = {
	[SchemeNorm] = { normfgcolor, normbgcolor, normbordercolor },
	[SchemeSel]  = { selfgcolor,  selbgcolor,  selbgcolor	   },
};



static const char *tags[] = { "1", "2", "3", "4", "5" };

static const Rule rules[] = {
	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
};


static const float mfact     = 0.5;
static const int nmaster     = 1;
static const int resizehints = 1;

#include <X11/XF86keysym.h>
#include "fibonacci.c"
static const Layout layouts[] = {
 	{ "[\\]",      dwindle },
	{ "[@]",      spiral },
};

#define MODKEY Mod4Mask
#define TAGKEYS(KEY,TAG) \
	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
	{ MODKEY|ShiftMask,             KEY,      tag,            {.ui = 1 << TAG} }, \
	{ MODKEY|ControlMask|ShiftMask, KEY,      toggletag,      {.ui = 1 << TAG} },

static const char *upvol[] = { "amixer", "set", "Master", "2+", NULL };
static const char *downvol[] = { "amixer", "set", "Master", "2-", NULL };

#define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
static char dmenumon[2] = "0";
static const char *dmenucmd[] = { "dmenu_run", NULL };
static const char *termcmd[]  = { "alacritty", NULL };

static Key keys[] = {
	{ MODKEY,              		XK_x,      spawn,          {.v = upvol } },
	{ MODKEY,                       XK_z,      spawn,          {.v = downvol } },
	{ MODKEY,                       XK_r,      spawn,          SHCMD("rofi -combi-modi window,drun,run -show-icons -show combi") },
	{ MODKEY,	                XK_Return, spawn,          {.v = termcmd } },
	{ MODKEY,             	        XK_z,      spawn,          {.v = upvol } },
	{ MODKEY,                       XK_x,	   spawn,          {.v = downvol } },
	{ MODKEY,          	        XK_w,      killclient,     {0} },
	{ MODKEY,	                XK_space,  togglefloating, {0} },
	TAGKEYS(                        XK_1,                      0)
	TAGKEYS(                        XK_2,                      1)
	TAGKEYS(                        XK_3,                      2)
	TAGKEYS(                        XK_4,                      3)
	TAGKEYS(                        XK_5,                      4)
	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
};

static Button buttons[] = {
	{ ClkLtSymbol,          0,              Button1,        setlayout,      {0} },
	{ ClkLtSymbol,          0,              Button3,        setlayout,      {.v = &layouts[2]} },
	{ ClkWinTitle,          0,              Button2,        zoom,           {0} },
	{ ClkStatusText,        0,              Button2,        spawn,          {.v = termcmd } },
	{ ClkClientWin,         MODKEY,         Button1,        movemouse,      {0} },
	{ ClkClientWin,         MODKEY,         Button2,        togglefloating, {0} },
	{ ClkClientWin,         MODKEY,         Button3,        resizemouse,    {0} },
	{ ClkTagBar,            0,              Button1,        view,           {0} },
	{ ClkTagBar,            0,              Button3,        toggleview,     {0} },
	{ ClkTagBar,            MODKEY,         Button1,        tag,            {0} },
	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
};

